// The `PmdModule` trait enables support for analyzing sources with
// https://docs.pmd-code.org/latest/index.html[PMD].

// We define a Java project that extends the `PmdModule` trait and provide a
// https://docs.pmd-code.org/latest/pmd_rules_java.html[ruleset] in an XML file.

package build

import mill.javalib.JavaModule
import mill.javalib.pmd.PmdModule

object `package` extends JavaModule with PmdModule

/** See Also: ruleset.xml */
/** See Also: src/Foo.java */

// NOTE: Mill auto-detects rulesets by searching the module (or workspace) folder for XML files with
// name starting with "ruleset".

// Running the `pmd` command applies the rule on all sources and reports violations in one of the
// available https://docs.pmd-code.org/latest/pmd_userdocs_report_formats.html[formats].

/** Usage
> ./mill pmd                # violations are reported and task fails
...Foo.java:4:	SystemPrintln:	Usage of System.out/err
error: ...violation(s) found

> ./mill pmd -f textcolor   # same as above with different report format
...Foo.java
    src:  Foo.java:4:4
    rule: SystemPrintln
    msg:  Usage of System.out/err
    code: System.out.println("Entering test");
Summary:
* warnings: 1
error: ...violation(s) found
*/

// TIP: For multi-module projects that share rulesets across all modules, it is sufficient to extend
// the `PmdModule` trait in the root module only.

// The same result can be achieved by running the companion
// xref:fundamentals/modules.adoc#_external_modules[external module].

/** Usage
> ./mill mill.javalib.pmd.PmdModule/
...Foo.java:4:	SystemPrintln:	Usage of System.out/err
error: ...violation(s) found
*/

// For the full list of configuration options, please refer to the
// link:{site-url}/api/latest/mill/javalib/pmd/PmdModule.html[API documentation].
